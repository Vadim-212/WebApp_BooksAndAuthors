@model WebApplication1.Entity.UsersBooks

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>UsersBooks</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("usersList", ViewBag.usersList as SelectList, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                <button id="users-list-search-btn" class="btn btn-default btn-light">Search</button>
                <input id="users-list-search" class="form-control" type="text" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.BookId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("booksList", ViewBag.booksList as SelectList, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BookId, "", new { @class = "text-danger" })
                <button id="books-list-search-btn" class="btn btn-default btn-light">Search</button>
                <input id="books-list-search" class="form-control" type="text" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IssueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IssueDate, new { htmlAttributes = new { @class = "form-control", @type="datetime-local",@Value=Model.IssueDate.ToString("yyyy-MM-ddThh:mm") } })
                       @Html.ValidationMessageFor(model => model.IssueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control",@type = "datetime-local", @Value = Model.Time.ToString("yyyy-MM-ddThh:mm") } })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReturnDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReturnDate, new { htmlAttributes = new { @class = "form-control",@type = "datetime-local", @Value =(DateTime.Compare(Model.ReturnDate,new DateTime(1900,1,1,0,0,0))==0)?"":Model.ReturnDate.ToString("yyyy-MM-ddThh:mm") } })
                @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default btn-light" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
